<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			  							   xmlns:s="library://ns.adobe.com/flex/spark"
										   xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
										   width="600" height="240" minWidth="300" minHeight="150" title="Select SDK"
										   skinClass="components.skins.ResizableTitleWindowSkin">
	<fx:Metadata>
		[Event(name="actionSelected",type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
		import actionScripts.plugin.build.vo.BuildActionVO;

		[Bindable]
		public var actions:ArrayList;
		[Bindable]
		public var selectedItem:Object;

		protected function onDgActionsDoubleClick(event:MouseEvent):void
		{
			dispatchEvent(new Event("actionSelected"));
			super.closeThis();
		}

		private function onBtnActionAddClick(event:MouseEvent):void
		{
			var action:BuildActionVO = new BuildActionVO("Build", "");
			this.actions.addItem(action);
		}

		private function onBtnActionRemoveClick(event:MouseEvent):void
		{
			if (dgActions.selectedIndex > -1)
			{
				this.actions.removeItemAt(dgActions.selectedIndex);
				selectedItem = null;
			}
		}
		]]>
	</fx:Script>

	<s:DataGrid id="dgActions"
				width="100%" height="100%" itemRenderer="components.renderers.GeneralListRenderer"
				sortableColumns="false" borderVisible="false" editable="true"
				contentBackgroundColor="0xe0e0e0" selectionColor="0xf6f6f6"
				rowHeight="28" horizontalScrollPolicy="off"
				dataProvider="{actions}" selectedItem="@{selectedItem}">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="Action name" dataField="actionName" width="200" minWidth="200" editable="true"/>
				<s:GridColumn headerText="Action" dataField="action" editable="true"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button label="+"
				  click="onBtnActionAddClick(event)"
				  styleName="darkButton"/>
		<s:Button label="-"
				  enabled="{dgActions.selectedItem}"
				  click="onBtnActionRemoveClick(event)" styleName="darkButton"/>
		<s:Spacer width="100%"/>
		<s:Button label="Select"
				  enabled="{dgActions.selectedItem}" click="onDgActionsDoubleClick(event)" styleName="darkButton"/>
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>