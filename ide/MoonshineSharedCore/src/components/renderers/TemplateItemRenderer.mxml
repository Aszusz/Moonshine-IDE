<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				creationComplete="init()" autoDrawBackground="false" width="100%">
	
	<fx:Script>
		<![CDATA[
			import actionScripts.valueObjects.ConstantsCoreVO;
			private var loader:Loader = new Loader();

			private function init():void
			{
				labelDisplay.removeEventListener(MouseEvent.CLICK, handleClick);
				labelDisplay.addEventListener(MouseEvent.CLICK, handleClick);
			}

			private function handleClick(event:Event):void
			{
				dispatchEvent( new Event("itemClick", true, false) );
			}

			override public function set data(value:Object):void
			{
				super.data = value;
				if (ConstantsCoreVO.IS_AIR)
				{
					// desc.text = value.description;
					label = value.title;
					if(value.logoImagePath)
					{
						fileIcon.includeInLayout = true;
						loader.load(new URLRequest(value.logoImagePath));
						loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onProjectIconLoadingComplete);
					}
					else
					{
						fileIcon.visible = false;
						fileIcon.includeInLayout = false;
					}
				}
				else
				{
					label = value.fileBridge.name;
				}
			}

			private function onProjectIconLoadingComplete(event:Event):void
			{
				fileIcon.source = event.currentTarget.content;
			}

			override protected function set hovered(value:Boolean):void
			{
				super.hovered = value;
				if (value && labelDisplay)
				{
					labelDisplay.setStyle("color", 0xFFFFFF);
				}
				else if (!value && labelDisplay)
				{
					labelDisplay.setStyle("color", 0xD6D6D6);
				}
			}
		]]>
	</fx:Script>

	<s:layout>
		<s:HorizontalLayout  />
	</s:layout>
	
	<s:Image id="fileIcon" height="20" width="20"  />
	<s:Label id="labelDisplay"
			paddingTop="4"
			paddingLeft="3"
			paddingRight="3"
			paddingBottom="0"
			fontFamily="DejaVuSans"
			fontSize="15"
			baseline="50"
			height="100%"
			verticalAlign="middle" color="0xD6D6D6"
			useHandCursor="true" buttonMode="true" mouseChildren="false"/>
</s:ItemRenderer>