<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
// 
////////////////////////////////////////////////////////////////////////////////
-->
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  width="100%"
		  verticalAlign="middle"
		  gap="0"
	      creationComplete="init()">
	
	<fx:Script>
		<![CDATA[
			import mx.utils.StringUtil;
			
			import spark.components.TextSelectionHighlighting;
			
			import actionScripts.plugin.settings.vo.StringSetting;

			import spark.events.TextOperationEvent;

			[Bindable]
			public var setting:StringSetting;
			
			private function init():void
			{
				text.text = setting.stringValue;
				text.selectRange(0,text.text.length);
				
				updatePrompt();

				text.setFocus();
			}
			
			private function focusIn():void
			{
				text.visible = true;
				text.includeInLayout = true;
				
				textPrompt.visible = false;
				textPrompt.includeInLayout = false;
				
				callLater(text.setFocus);
			}
			
			private function updatePrompt():void
			{
				var hasText:Boolean = (StringUtil.trim(text.text).length != 0);
				
				text.visible = text.includeInLayout = hasText;
				textPrompt.visible = textPrompt.includeInLayout = !hasText;
				
				//to show project Name highlighted while creating new Project
				if(setting.name=="projectName")
				{
					text.selectionHighlighting = TextSelectionHighlighting.ALWAYS;
				}
			}

			private function onTextChange(event:TextOperationEvent):void
			{
				setting.stringValue = text.text;
				setting.dispatchEvent(new Event(StringSetting.VALUE_UPDATED));
			}
		]]>
	</fx:Script>

	<s:Label id="lbl"
		styleName="uiTextSettingsLabel"
		text="{setting.label}"
		paddingTop="15"
		paddingBottom="15" paddingRight="50"
		mouseDown="focusIn()" />

	<s:TextInput id="text"
		styleName="uiTextSettingsValue"
		height="100%" width="100%"
		textAlign="right"
		borderVisible="false"
		contentBackgroundAlpha="1"
		unfocusedTextSelectionColor="#a8c6ee"
		focusAlpha="0"
		change="onTextChange(event)"
		focusOut="updatePrompt()"
		contentBackgroundColor="#FFFFFF"/>

	<s:TextInput id="textPrompt"
		styleName="uiTextSettingsLabel"
		height="100%" width="100%"
		textAlign="right"
		borderVisible="false"
		contentBackgroundAlpha="0"
		focusAlpha="0"
		text="No value"
		visible="false"
		includeInLayout="false"
		mouseDown="focusIn()"
		/>
</s:HGroup>